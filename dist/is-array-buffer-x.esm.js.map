{"version":3,"sources":["../src/is-array-buffer-x.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,YAAP,MAAyB,kBAAzB;AACA,OAAO,cAAP,MAA2B,qBAA3B;AACA,OAAO,wBAAP,MAAqC,sCAArC;AACA,OAAO,WAAP,MAAwB,iBAAxB;AACA,OAAO,SAAP,MAAsB,cAAtB;AAEA,IAAM,OAAO,GAAG,OAAO,WAAP,KAAuB,UAAvC;AACA,IAAM,OAAO,GAAG,sBAAhB;;AAEA,IAAM,UAAU,GAAG,SAAS,UAAT,GAAsB;AACvC;AACA,MAAM,UAAU,GAAG,wBAAwB,CAAC,WAAW,CAAC,SAAb,EAAwB,YAAxB,CAA3C;;AAEA,MAAI,UAAU,IAAI,OAAO,UAAU,CAAC,GAAlB,KAA0B,UAA5C,EAAwD;AACtD,QAAM,MAAM,GAAG,OAAO,CAAC,SAAS,SAAT,GAAqB;AAC1C;AACA,aAAO,IAAI,WAAJ,CAAgB,CAAhB,CAAP;AACD,KAHqB,CAAtB;;AAKA,QAAI,MAAM,CAAC,KAAP,KAAiB,KAAjB,IAA0B,YAAY,CAAC,MAAM,CAAC,KAAR,CAA1C,EAA0D;AACxD,UAAM,MAAM,GAAG,OAAO,CAAC,IAAR,CAAa,MAAM,CAAC,KAApB,EAA2B,UAAU,CAAC,GAAtC,CAAf;AAEA,aAAO,MAAM,CAAC,KAAP,KAAiB,KAAjB,IAA0B,OAAO,MAAM,CAAC,KAAd,KAAwB,QAAlD,IAA8D,UAAU,CAAC,GAAhF;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAlBD;;AAoBA,IAAM,OAAO,GAAG,OAAO,IAAI,cAAX,GAA4B,UAAU,EAAtC,GAA2C,IAA3D;AAEA;;;;;;;;AAOA,IAAM,aAAa,GAAG,SAAS,aAAT,CAAuB,MAAvB,EAA+B;AACnD,MAAI,OAAO,KAAK,KAAZ,IAAqB,YAAY,CAAC,MAAD,CAAZ,KAAyB,KAAlD,EAAyD;AACvD,WAAO,KAAP;AACD;;AAED,MAAI,SAAS,CAAC,OAAD,CAAT,KAAuB,KAA3B,EAAkC;AAChC,WAAO,WAAW,CAAC,MAAD,CAAX,KAAwB,OAA/B;AACD;;AAED,MAAM,MAAM,GAAG,OAAO,CAAC,IAAR,CAAa,MAAb,EAAqB,OAArB,CAAf;AAEA,SAAO,MAAM,CAAC,KAAP,KAAiB,KAAjB,IAA0B,OAAO,MAAM,CAAC,KAAd,KAAwB,QAAzD;AACD,CAZD;;AAcA,eAAe,aAAf","file":"is-array-buffer-x.esm.js","sourcesContent":["import attempt from 'attempt-x';\nimport isObjectLike from 'is-object-like-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport getOwnPropertyDescriptor from 'object-get-own-property-descriptor-x';\nimport toStringTag from 'to-string-tag-x';\nimport toBoolean from 'to-boolean-x';\n\nconst hasABuf = typeof ArrayBuffer === 'function';\nconst aBufTag = '[object ArrayBuffer]';\n\nconst getBlength = function getBlength() {\n  /* eslint-disable-next-line compat/compat */\n  const descriptor = getOwnPropertyDescriptor(ArrayBuffer.prototype, 'byteLength');\n\n  if (descriptor && typeof descriptor.get === 'function') {\n    const resBuf = attempt(function attemptee() {\n      /* eslint-disable-next-line compat/compat */\n      return new ArrayBuffer(4);\n    });\n\n    if (resBuf.threw === false && isObjectLike(resBuf.value)) {\n      const resGet = attempt.call(resBuf.value, descriptor.get);\n\n      return resGet.threw === false && typeof resGet.value === 'number' && descriptor.get;\n    }\n  }\n\n  return null;\n};\n\nconst bLength = hasABuf && hasToStringTag ? getBlength() : null;\n\n/**\n * Determine if an `object` is an `ArrayBuffer`.\n *\n * @param {*} object - The object to test.\n * @returns {boolean} `true` if the `object` is an `ArrayBuffer`,\n *  else false`.\n */\nconst isArrayBuffer = function isArrayBuffer(object) {\n  if (hasABuf === false || isObjectLike(object) === false) {\n    return false;\n  }\n\n  if (toBoolean(bLength) === false) {\n    return toStringTag(object) === aBufTag;\n  }\n\n  const result = attempt.call(object, bLength);\n\n  return result.threw === false && typeof result.value === 'number';\n};\n\nexport default isArrayBuffer;\n"]}